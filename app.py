import streamlit as st
import pandas as pd
import numpy as np
from src.data_utils import load_data
from src.modeling import run_models, plot_with_ci
import plotly.graph_objects as go

st.set_page_config(layout="wide", page_title="AIIS-WH2 - COVID-19 Models")

st.title("AIIS-WH2 - COVID-19 Dataset — Regression Models")
st.markdown("CRISP-DM workflow: Business Understanding → Data → Modeling → Evaluation → Deployment")

df = load_data("data/corona.csv")

if df is None:
    st.error("Dataset not found. Please upload `data/corona.csv` (download from Kaggle).")
    uploaded = st.file_uploader("Upload corona.csv", type=["csv"])
    if uploaded:
        df = pd.read_csv(uploaded)
        df.to_csv("data/corona.csv", index=False)
        st.success("Saved to data/corona.csv, please re-run.")
else:
    st.sidebar.header("Model Controls")
    target = st.sidebar.selectbox("Target variable", options=["Confirmed", "Deaths", "Recovered"], index=0)
    test_size = st.sidebar.slider("Test size (fraction)", 0.1, 0.5, 0.2)
    run_btn = st.sidebar.button("Run models")

    st.subheader("Dataset sample")
    st.dataframe(df.head(200))

    if run_btn:
        with st.spinner("Running models..."):
            results = run_models(df, target=target, test_size=test_size, random_state=42)
        st.success("Models trained")
        st.subheader("Model Evaluation")
        st.dataframe(pd.DataFrame(results['metrics']).T)

        st.subheader("Prediction plot with intervals")
        fig = plot_with_ci(results, df, target=target)
        st.plotly_chart(fig, use_container_width=True)

st.markdown("---")
st.caption("Generated by AIIS-WH2 template. Follow README for full reproducibility.")
